!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("shared-reducer-frontend",[],t):"object"==typeof exports?exports["shared-reducer-frontend"]=t():e["shared-reducer-frontend"]=t()}(global,(function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(i,s,function(t){return e[t]}.bind(null,s));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports=require("json-immutability-helper")},function(e,t,n){e.exports=n(2)},function(e,t,n){"use strict";function i(e){return e?t=>(e(t),null):null}function s(e,t){if(!e&&!t)return null;const n=t=>null==e?void 0:e(t);return n.reject=t,n.afterSync=!0,n}n.r(t),n.d(t,"actionsHandledCallback",(function(){return i})),n.d(t,"actionsSyncedCallback",(function(){return s}));var a=n(0);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class l{constructor(e,t,n,i){this.messageCallback=n,this.errorCallback=i,r(this,"ws",void 0),r(this,"pingTimeout",null),r(this,"sendPing",()=>{this.ws.send("P")}),r(this,"handleMessage",({data:e})=>{this.queueNextPing(),"p"!==e&&this.messageCallback(JSON.parse(e))}),r(this,"handleError",()=>{var e;null===(e=this.errorCallback)||void 0===e||e.call(this,"Failed to connect")}),r(this,"handleClose",()=>{null!==this.pingTimeout&&clearTimeout(this.pingTimeout)}),this.ws=new WebSocket(e),this.ws.addEventListener("message",this.handleMessage),this.ws.addEventListener("error",this.handleError),this.ws.addEventListener("close",this.handleClose),t&&this.ws.addEventListener("open",()=>this.ws.send(t),{once:!0}),this.queueNextPing()}send(e){this.ws.send(JSON.stringify(e))}close(){this.ws.close(),null!==this.pingTimeout&&clearTimeout(this.pingTimeout)}queueNextPing(){null!==this.pingTimeout&&clearTimeout(this.pingTimeout),this.pingTimeout=setTimeout(this.sendPing,2e4)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}t.default=class{constructor(e,t,n,i,s){this.changeCallback=n,this.warningCallback=s,c(this,"connection",void 0),c(this,"latestServerState",void 0),c(this,"latestLocalState",void 0),c(this,"currentChange",void 0),c(this,"currentSyncCallbacks",[]),c(this,"localChanges",[]),c(this,"pendingChanges",[]),c(this,"dispatchLock",((e="recursion detected")=>{let t=!1;return n=>{if(t)throw new Error(e);try{return t=!0,n()}finally{t=!1}}})("Cannot dispatch recursively")),c(this,"nextId",(()=>{let e=0;return()=>(e+=1,e)})()),c(this,"dispatch",e=>{if(!e||!e.length)return;const t=this.getState();void 0===t?this.pendingChanges.push(...e):this.applySpecs(t,e,!1)}),c(this,"sendCurrentChange",()=>{if(!this.currentChange)return;const e=this.nextId(),t=this.currentChange,n=this.currentSyncCallbacks;this.currentChange=void 0,this.currentSyncCallbacks=[],this.localChanges.push({change:t,id:e,syncCallbacks:n}),this.connection.send({change:t,id:e})}),c(this,"handleMessage",e=>{const t=e,{localChange:n,index:i}=this.popLocalChange(t.id);if(void 0!==t.error){var s;null===(s=this.warningCallback)||void 0===s||s.call(this,"Update failed: "+t.error),this.latestLocalState=void 0;const e=this.getState();var r;if(e)null===(r=this.changeCallback)||void 0===r||r.call(this,e);return void(null==n||n.syncCallbacks.forEach(e=>{var n;return null===(n=e.reject)||void 0===n?void 0:n.call(e,t.error)}))}const l=0!==i;this.latestServerState=Object(a.update)(this.latestServerState||{},t.change),this.latestLocalState&&!l||(this.latestLocalState=this.localStateFromServerState(this.latestServerState));let c=this.latestLocalState;c=this.applySpecs(c,this.pendingChanges,l),this.pendingChanges.length=0,null==n||n.syncCallbacks.forEach(e=>e(c))}),this.connection=new l(e,t,this.handleMessage,i)}close(){this.connection.close(),this.latestServerState=void 0,this.latestLocalState=void 0,this.currentChange=void 0,this.currentSyncCallbacks=[],this.localChanges=[],this.pendingChanges=[]}addSyncCallback(e,t){this.dispatch([s(e,t)])}syncedState(){return new Promise((e,t)=>{this.addSyncCallback(e,t)})}getState(){return!this.latestLocalState&&this.latestServerState&&(this.latestLocalState=this.localStateFromServerState(this.latestServerState)),this.latestLocalState}localStateFromServerState(e){let t=Object(a.update)(e,Object(a.combine)(this.localChanges.map(({change:e})=>e)));return this.currentChange&&(t=Object(a.update)(t,this.currentChange)),t}addCurrentChange(e){this.currentChange?this.currentChange=Object(a.combine)([this.currentChange,e]):(this.currentChange=e,setTimeout(this.sendCurrentChange,0))}applySpecs(e,t,n){if(!t.length){var i;if(n)null===(i=this.changeCallback)||void 0===i||i.call(this,e);return e}const{state:s,delta:r}=this.dispatchLock(()=>function(e,t,n){let i=e;const s=[],r=[];function l(){if(r.length>0){const e=Object(a.combine)(r);s.push(e),i=Object(a.update)(i,e),r.length=0}}return function(e,t){let n={vs:e,i:0,prev:null};for(;n;)if(n.i>=n.vs.length)n=n.prev;else{const e=t(n.vs[n.i]);n.i+=1,e&&e.length&&(n={vs:e,i:0,prev:n})}}(t,t=>"function"==typeof t?(l(),t.afterSync?(n(t,i),null):t(e)):(t&&r.push(t),null)),l(),{state:i,delta:Object(a.combine)(s)}}(e,t,(t,n)=>{n!==e||this.currentChange?this.currentSyncCallbacks.push(t):t(e)}));var l;(s!==e&&(this.latestLocalState=s,this.addCurrentChange(r)),s!==e||n)&&(null===(l=this.changeCallback)||void 0===l||l.call(this,s));return s}popLocalChange(e){const t=void 0===e?-1:this.localChanges.findIndex(t=>t.id===e);return-1===t?{localChange:null,index:t}:{localChange:this.localChanges.splice(t,1)[0],index:t}}}}])}));
//# sourceMappingURL=index.js.map